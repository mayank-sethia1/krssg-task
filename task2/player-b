#!/usr/bin/env python3

import rospy
from std_msgs.msg import String
from std_msgs.msg import Float32MultiArray


class ClientBNode:
    def __init__(self):
        rospy.init_node('client_b_node')####
        self.publisher = rospy.Publisher('server_b', String, queue_size=10)###
        self.subscriber_hp = rospy.Subscriber('hp', Float32MultiArray, self.callback_hp)
        self.subscriber_turn = rospy.Subscriber('turn', String, self.callback_turn)
        self.received_hp = False
        self.received_turn = False
        self.prompt = ['rock', 'thunder', 'wind']###
        self.index = 0
        self.turn= None
        self.hp =[]
        self.msg=""
    def ask_input(self):
        if self.hp[self.index]>0:
            message = input(self.prompt[self.index])
            self.msg += self.prompt[self.index] + " " +message+" "
        self.index += 1
        if self.index == 3:
            self.publisher.publish(self.msg)
            self.msg=""
            self.received_hp = False
            self.received_turn = False
            self.index = 0

    def callback_hp(self, data):
        self.hp= data.data[3:6]###
        print(f"hp are of player a are:\nfire:{data.data[0]}\nwater{data.data[1]}\nearth{data.data[2]}")
        print(f"hp are of player b are:\nrock:{data.data[3]}\nthunder{data.data[4]}\nwind{data.data[5]}")
        self.received_hp = True

    def callback_turn(self, data):
        print(f"{data.data}\n")
        self.received_turn = True
        self.turn=data.data

    def run(self):
        rate = rospy.Rate(1)
        while not rospy.is_shutdown():
            if self.received_hp and self.received_turn and self.turn =='b turn':####
                self.ask_input()
            rate.sleep()


if __name__ == '__main__':
    client_b_node = ClientBNode()
    client_b_node.run()
